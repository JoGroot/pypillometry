Usage overview
==============

Overview
--------

The package is divided into separate sub-modules that solve specific subtasks (pre-processing, baseline estimation etc). The functions in these modules operate on plain :py:mod:`numpy.array`'s or standard Python-structures. While these functions can be used directly, an easier approach is to use the class :py:class:`~pypillometry.pupildata.PupilData` which wraps these functions in a convenient way. Each object of class :py:class:`~pypillometry.pupildata.PupilData` represents one dataset of pupillometric data, including time, signal and external events (trial onsets, stimulus presentations, responses, etc). By calling the member functions of such an object, the corresponding function from one of the sub-modules is called using the appropriate arguments.

Reading data
------------

So far, reading in data is not part of the :py:mod:`pypillometry`-package. There are many ways in which pupillometric data can be read into Python. For example, Eyelink's `ASC-format <http://download.sr-support.com/dispdoc/page25.html>`_ generated by the EDF2ASC conversion tool outputs space-separated data that can be easily loaded using the `I/O functionality of the pandas package <https://pandas.pydata.org/pandas-docs/stable/reference/io.html>`_ . 

Data is input into :mod:`pypillometry` using the :func:`constructor <pypillometry.pupildata.PupilData.__init__>` of the :class:`~pypillometry.pupildata.PupilData` object.

Pre-processing data
-------------------

Assuming you have generated a :class:`~pypillometry.pupildata.PupilData` object, you can use the following functions.



**Handling Blinks:**

.. currentmodule:: pypillometry.pupildata

.. autosummary::

    PupilData.detect_blinks
    PupilData.blink_interp_mahot
    PupilData.plot_blinks

**Smoothing/low-pass filtering:**

.. autosummary::

    PupilData.lowpass_filter
    PupilData.smooth_window
    PupilData.downsample

**Changing/Slicing data**

.. autosummary::

    PupilData.sub_slice
    PupilData.copy
    PupilData.scale
    PupilData.unscale

Plotting/Summarizing Data
-------------------------

**Plotting**

.. autosummary::

    PupilData.plot
    PupilData.plot_blinks
    

**Inspecting/Summarizing**

.. autosummary::

    PupilData.summary
    PupilData.stat_per_event    
    

Baseline/Response estimation
----------------------------

.. autosummary::

    PupilData.estimate_baseline
    PupilData.estimate_response    
    PupilData.stat_per_event
    
Artificial Data
---------------

